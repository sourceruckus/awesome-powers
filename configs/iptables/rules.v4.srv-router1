# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*security
:INPUT ACCEPT [1464:177319]
:FORWARD ACCEPT [19:1220]
:OUTPUT ACCEPT [934:103859]
COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*raw
:PREROUTING ACCEPT [2049:213977]
:OUTPUT ACCEPT [934:103859]
COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# NAT rules for port-forwarding to different hosts
#
# send port 2781 to srv-www.infrastructure.cah:80
#
# FIXME: we need to specify the SNAT source IP... which will be different
#        between srv-router1 and srv-router2.
#
# FIXME: do i really need to specify the output interface in the POSTROUTING
#        rule?
#
-A PREROUTING -i eth0.2 -p tcp --dport 2781 -j DNAT --to-destination 10.37.20.5:80
-A POSTROUTING -d 10.37.20.5 -o eth0.20 -p tcp --dport 80 -j SNAT --to-source 10.37.20.2

# send port 2723 to 22 locally
-A PREROUTING -i eth0.2 -p tcp --dport 2723 -j DNAT --to-destination 10.37.20.2:22

# masquerade all outbound traffic on our public interface (eth0.2, vlan2)
-A POSTROUTING -o eth0.2 -j MASQUERADE

COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*mangle
:PREROUTING ACCEPT [2049:213977]
:INPUT ACCEPT [1464:177319]
:FORWARD ACCEPT [19:1220]
:OUTPUT ACCEPT [934:103859]
:POSTROUTING ACCEPT [1113:123380]

# mark traffic that comes directly to port 22 so we can drop it later on w/out
# also dropping the traffic we've forwarded there from 2723
-A PREROUTING -i eth0.2 -p tcp --dport 22 -j MARK --set-mark 1

COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*filter
# Allow all outgoing, but drop incoming and forwarding packets by default
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Custom per-protocol chains
:UDP - [0:0]
:TCP - [0:0]
:ICMP - [0:0]

# Acceptable UDP traffic


# Acceptable TCP traffic


# Acceptable ICMP traffic
-A ICMP -p icmp --icmp-type echo-request -j ACCEPT


# Boilerplate acceptance policy
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -i lo -j ACCEPT


# Accept all trusted internal network traffic (i.e., not internet and not
# public.cah)
#
# FIXME: get rid of eth0 when ready
#
-A INPUT -i eth0 -j ACCEPT
-A INPUT -i eth0.20 -j ACCEPT
-A INPUT -i eth0.30 -j ACCEPT
-A INPUT -i eth0.40 -j ACCEPT
-A INPUT -i wg-cah -j ACCEPT


# drop anything we've marked for dropping
-A INPUT -p tcp -m mark --mark 1 -j REJECT --reject-with tcp-reset


# WireGuard policy
#
# let any wireguard traffic in on the port we're using
#
-A INPUT -i eth0.2 -p udp --dport 51820 -j ACCEPT
# also allow it from public.cah
-A INPUT -i eth0.10 -p udp --dport 51820 -j ACCEPT


# WWW policy
#
# open up our non-standard port, because we're going to forward traffic there
# to srv-www:80 and we can't if it's blocked (duh).
#
# FIXME: that's fine and dandy for now, but eventually we'll be hosting
#        cowesettanimalhospital.com web traffic and we'll want to redirect from
#        port 80.
#
-A INPUT -i eth0.2 -p tcp --dport 2781 -j ACCEPT


# SSH policy
#
# let everybody in locally
#
# NOTE: There's no reason for this rule, because we already allow ALL local
#       traffic... but just in case we change that later, I've left this here
#       commented out.
#
#-A INPUT ! -i eth0.2 -p tcp --dport 22 -j ACCEPT
#
# open up our non-standard port, because we're going to forward traffic from
# there to port 22 and we can't if it's blocked (duh).
-A INPUT -i eth0.2 -p tcp --dport 2723 -j ACCEPT

# Let traffic from the public wifi ap in
-A INPUT -i eth0.10 -m mac --mac-source 74:83:c2:b9:f0:ea -j ACCEPT

# Instead of blacklisting IPs that are spamming my box, let's try and deter
# brute force attacks by only allowing 3 connections per minute.  This way, the
# firewall is dynamically helping reduce traffic, and IPs don't get permanently
# banned.
#
# NOTE: This is slightly annoying because it doesn't matter if the connection
#       is successful.  This means, if I open 5 terminals and try to start an
#       ssh session in each of them, the last 2 will fail to connect.
#
# NOTE: This only limits eth0.2, all other interfaces are explicitly allowed
#       elsewhere.
#
# record connections to ssh port
-A INPUT -i eth0.2 -p tcp --dport 22 -m state --state NEW -m recent --set --name ssh --rsource
# then rate limit connection attempts to 3 per minute
-A INPUT -i eth0.2 -p tcp --dport 22 -m state --state NEW -m recent ! --rcheck --seconds 60 --hitcount 4 --name ssh --rsource -j ACCEPT 


# Drop invalid packets
-A INPUT -m conntrack --ctstate INVALID -j DROP

# Pass traffic to protocol-specific chains
## Only allow new connections (established and related should already be handled)
## For TCP, additionally only allow new SYN packets since that is the only valid
## method for establishing a new TCP connection
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP
-A INPUT -p icmp -m conntrack --ctstate NEW -j ICMP

# Reject anything that's fallen through to this point
## Try to be protocol-specific w/ rejection message
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-proto-unreachable


# Internet reply forwarding policies
#
# Allow all replies to forward back to the appropriate interface.  No point in
# dropping any of this, really.
#
# FIXME: should we eventually remove the eth0 interface rules?
#
-A FORWARD -i eth0.2 -o eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i eth0.2 -o eth0.10 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i eth0.2 -o eth0.20 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i eth0.2 -o eth0.30 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i eth0.2 -o eth0.40 -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i eth0.2 -o wg-cah -m state --state RELATED,ESTABLISHED -j ACCEPT


# Internal network forwarding policies
#
# old 192 network can go everywhere (TEMPORARY)
#
# FIXME: remove this once we're ready to decomission that old network
#
-A FORWARD -i eth0 -j ACCEPT
#
# public.cah can only go to internet and VPN (CONFIRMED)
-A FORWARD -i eth0.10 -o eth0.2 -j ACCEPT
-A FORWARD -i eth0.10 -o wg-cah -j ACCEPT
# traffic from pubblic wifi ap is allowed to forward to infrastructure.cah
-A FORWARD -i eth0.10 -o eth0.20 -m mac --mac-source 74:83:c2:b9:f0:ea -j ACCEPT
#
# infrastructure.cah can go everywhere (CONFIRMED)
-A FORWARD -i eth0.20 -j ACCEPT
#
# workstation.cah can only go to internet and infrastructure.cah (CONFIRMED)
-A FORWARD -i eth0.30 -o eth0.2 -j ACCEPT
-A FORWARD -i eth0.30 -o eth0.20 -j ACCEPT
-A FORWARD -i eth0.30 -o wg-cah -j ACCEPT
#
# instrument.cah can only to to internet and infrastructure.cah (CONFIRMED)
-A FORWARD -i eth0.40 -o eth0.2 -j ACCEPT
-A FORWARD -i eth0.40 -o eth0.20 -j ACCEPT
-A FORWARD -i eth0.40 -o wg-cah -j ACCEPT
#
# allow wireguard interface to forward everywhere
-A FORWARD -i wg-cah -j ACCEPT


# allow traffic heading to srv-www:80 (forwarded from port 2781)
-A FORWARD -p tcp -d 10.37.20.5 --dport 80 -j ACCEPT

COMMIT
# Completed on Fri Jan 24 23:18:05 2020
