#!/bin/bash
#
# Awesome Powers - scripts & config files of pure awesomeness
#
# Copyright 2018-2024 Michael D Labriola <veggiemike@sourceruckus.org>
#
# Licensed under the GPLv3. See the file COPYING for details. 
#
# This script wraps around tc-rules providing settings for the Cowesett Animal
# Hospital's 4g modem WAN interface.
#
#
### higher priority stuff
#
# voip - Not currently on it's own vlan, but planning to switch to that if it
# ever becomes trivial.  It looks like our phones are using DSCP: AF31, TOS:
# 0x68 (104 decimal), so I guess we could pick that traffic out.  For now,
# though, I've marked all traffic from our phones' MACs as high priority.
#
### lower priority stuff
#
# anything coming from public WiFi - Marked via iptables
#
### middle tier
#
# anything else, including Shepherd (because it's just a webpage) and DICOM
# from digital xray (because it's basically bulk upload when needed).
#

export DEV=eth0.3

# Setting the ceiling to 4mbit/s... we set the high/medium/low guaranteed rates
# below, but this is still needed to cap the outgoing traffic.
#
# FIXME: Maybe raise these rates if testing proves we're massively
#        underutilizing the interface.
#
export UP_MBIT=4
export DOWN_MBIT=4

# Guarantee 1M for HIGH, 1M for MEDIUM, and next to nothing for LOW.  These
# numbers intentionally don't add up to our ceiling UP_MBIT, because that's
# really a moving target depending on signal quality.
#
# NOTE: The Ooma webpage says you need 256 kbps per line here
#       https://support.ooma.com/office/speed-test/, but I recall seing
#       slightly less than 512 listed somewhere at some point too.  If 256 will
#       do, that 1M is good for 4 concurrent phone calls GUARANTEED.  Once you
#       have more than 4 though, they probably all start getting some of their
#       packets dumped into the MEDIUM queue (unless there's spare uplink
#       bandwidth, which is a solid probably)
#
# NOTE: We also don't guarantee the full uplink rate because it could
#       technically also be in use by aragorn and srv-router2, both of which
#       have access to this WAN interface for emergency off-site access (i.e.,
#       in case srv-router1 fails to propperly switch over to 4g when cable
#       goes out).
#
export UP_HIGH_GUARANTEED_RATE_KBIT=1024
export UP_MEDIUM_GUARANTEED_RATE_KBIT=1024
export UP_LOW_GUARANTEED_RATE_KBIT=8

exec $(dirname $0)/tc-rules $*
