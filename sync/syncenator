#!/bin/bash
#
# sync files with a remote host awesomely
#
# symlink me so i have a specific $0 per use case
#

. $0.conf

log=$0.log
lock=$0.lock
stamp=$(date +"%Y-%m-%dT%H-%M-%S")

# FIXME: we can do better than this...
if [ "$1" = "--dry-run" ] || [ "$1" = "-n" ]; then
    dryrun="-n"
else
    dryrun=
    # when not dryrun, we redirect all output to the logfile
    exec 1>>$log
    exec 2>&1
fi

# check for required vars before locking
if [ -n "$src_host" ]; then
    rmt_host=$src_host
elif [ -n "$dst_host" ]; then
    rmt_host=dst_host
else
    echo 'either $src_host or $dst_host is required'
    exit 1
fi
if [ -z "$src_path" ]; then
    echo '$src_path is required'
    exit 1
fi
if [ -z "$dst_path" ]; then
    echo '$dst_path is required'
    exit 1
fi

# make sure we're not already running
[ -e $lock ] && exit 0

# make sure rmt_host is there
if ! (ping -qc1 $rmt_host >/dev/null 2>&1); then
    # if the remote host is transient (e.g., laptop, phone), exit politely.
    # otherwise exit with failure status
    if [ -n "$rmt_transient"]; then
        exit 0
    else
        exit 1
    fi
fi

echo "--- START: $stamp ----------------------------------------------------"
[ -z "$rsync_opts" ] && rsync_opts="-va -HAX"

go="rsync $rsync_opts $dryrun "
[ -n "$src_user" ] && go+="$src_user@"
[ -n "$src_host" ] && gp+="$src_host:"
go+="$sourcedir "
[ -n "$dst_user" ] && go+="$dst_user@"
[ -n "$dst_host" ] && gp+="$dst_host:"
go+="$destdir"
echo $go
eval $go

# FIXME: could stick $postsync_script in config and call it here to do
#        finishing touches for wacky needs.  if we do that, i guess we should
#        add $presync_script too just to be symmetrical.  i think photo-grabber
#        would need this if i were to reimp that using this script as a base.

echo "--- END: $stamp (at $(date +"%Y-%m-%dT%H-%M-%S")) -----------------------------"
rm -f $lock
exit 0
