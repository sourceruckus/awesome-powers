#!/bin/bash
#
# script for generating periodic drbd status
#
# NOTE: All output appended to logfile, which is then mailed and removed each
#       night (log rotation and mailing is not this script's responsibility).
#

# parse our config
[ -f $0.conf ] && . $0.conf


log=$0.log
lock=$0.lock
stamp=$(date +"%Y-%m-%dT%H-%M-%S")

# FIXME: we can do better than this...
if [ "$1" = "--dry-run" ] || [ "$1" = "-n" ]; then
    dryrun="-n"
else
    dryrun=
    # when not dryrun, we redirect all output to the logfile
    exec 1>>$log
    exec 2>&1
fi

# make sure we're not already running
#
# NOTE: Under normal operation, we want to simply exit if previous run is still
#       processing.  However, the end-of-day reporting modes should wait until
#       previous invocation exits.
#
# FIXME: add a timeout?
#
if [ -n "$MODE" ]; then
    while [ -f $lock ]; do
        sleep 1
    done
else
    [ -e $lock ] && exit 0
fi

# parse common stuff
. $(dirname $0)/status-common


echo "--- START: $stamp ----------------------------------------------------"

touch $lock

case "$MODE" in
    analyze)
        # check for problems and append extra output
        echo "Doing end of day analysis"
        failures=0
        # disk states other than UpToDate
        check_log_for_pattern Diskless
        check_log_for_pattern Attaching
        check_log_for_pattern Detaching
        check_log_for_pattern Failed
        check_log_for_pattern Negotiating
        check_log_for_pattern Inconsistent
        check_log_for_pattern Outdated
        check_log_for_pattern DUnknown
        check_log_for_pattern Consistent
        # Roles other than Primary/Secondary
        check_log_for_pattern Unknown
        # Bad connection states
        check_log_for_pattern StandAlone
        check_log_for_pattern Disconnecting
        check_log_for_pattern Unconnected
        check_log_for_pattern Timeout
        check_log_for_pattern BrokenPipe
        check_log_for_pattern NetworkFailure
        check_log_for_pattern ProtocolError
        check_log_for_pattern TearDown
        check_log_for_pattern Connecting
        # Sync states
        check_log_for_pattern StartingSyncS
        check_log_for_pattern StartingSyncT
        check_log_for_pattern WFBitMapS
        check_log_for_pattern WFBitMapT
        check_log_for_pattern WFSyncUUID
        check_log_for_pattern SyncSource
        check_log_for_pattern SyncTarget
        check_log_for_pattern PausedSyncS
        check_log_for_pattern PausedSyncT
        check_log_for_pattern VerifyS
        check_log_for_pattern VerifyT
        check_log_for_pattern Ahead
        check_log_for_pattern Behind
        if [ $failures -ne 0 ]; then
            echo "!!!!"
            echo "!!!! Checks Failed: $failures"
            echo "!!!!"
        else
            echo "All checks passed.  :-)"
        fi
        ;;
    *)
        # append status
        drbdadm status
esac

echo "--- END: $stamp (at $(date +"%Y-%m-%dT%H-%M-%S")) -----------------------------"
rm -f $lock
exit 0
