# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*security
:INPUT ACCEPT [1464:177319]
:FORWARD ACCEPT [19:1220]
:OUTPUT ACCEPT [934:103859]
COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*raw
:PREROUTING ACCEPT [2049:213977]
:OUTPUT ACCEPT [934:103859]
COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]

# masquerade all outbound traffic on our wifi interface
-A POSTROUTING -o wlp2s0 -j MASQUERADE
-A POSTROUTING -o wg-cah1 -j MASQUERADE
-A POSTROUTING -o wg-cah2 -j MASQUERADE

COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*mangle
:PREROUTING ACCEPT [2049:213977]
:INPUT ACCEPT [1464:177319]
:FORWARD ACCEPT [19:1220]
:OUTPUT ACCEPT [934:103859]
:POSTROUTING ACCEPT [1113:123380]
COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*filter
# Allow all outgoing, but drop incoming and forwarding packets by default
:INPUT DROP [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]

# Custom per-protocol chains
:UDP - [0:0]
:TCP - [0:0]
:ICMP - [0:0]

# Acceptable UDP traffic


# Acceptable TCP traffic


# Acceptable ICMP traffic
-A ICMP -p icmp --icmp-type echo-request -j ACCEPT


# Boilerplate acceptance policy
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -i lo -j ACCEPT


# Accept all trusted internal network traffic (i.e., not internet and not
# public.cah)
#
-A INPUT ! -i wlp2s0 -j ACCEPT


# WireGuard policy
#
# let any wireguard traffic in on the port we're using
#
#-A INPUT -i wlp2s0 -p udp --dport 51820 -j ACCEPT


# SSH policy
#
# let everybody in
#
-A INPUT -p tcp --dport 22 -j ACCEPT


# Drop invalid packets
-A INPUT -m conntrack --ctstate INVALID -j DROP

# Pass traffic to protocol-specific chains
## Only allow new connections (established and related should already be handled)
## For TCP, additionally only allow new SYN packets since that is the only valid
## method for establishing a new TCP connection
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp --syn -m conntrack --ctstate NEW -j TCP
-A INPUT -p icmp -m conntrack --ctstate NEW -j ICMP

# Reject anything that's fallen through to this point
## Try to be protocol-specific w/ rejection message
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-proto-unreachable


COMMIT
# Completed on Fri Jan 24 23:18:05 2020
