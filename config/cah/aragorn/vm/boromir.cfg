name="boromir"

#kernel="/boot/vmlinuz-6.6.y"
#ramdisk="/boot/initrd-6.6.y.img"
#ramdisk="/scrap/ruckusrd/src/initrd-6.6.89-mdl+-testrd.img"

kernel="/boot/vmlinuz-6.12.y"
ramdisk="/boot/initrd-6.12.y.img"
#ramdisk="/scrap/ruckusrd/src/initrd-6.12.27-mdl+-testrd.img"

#cmdline="console=hvc0 loglevel=2 initramsys-net=VLAN=20 root=/dev/xvdb initramsys-installer=IMGDIR=noble" # no esp, no swap
#cmdline="root=ZFS=zroot/root sqsh_layerdev=ZFS=zroot/sqsh sqsh_layers=es ro firstboot console=hvc0 loglevel=2 initramsys"
cmdline="root=ZFS=zroot/root sqsh_layerdev=/dev/xvdb sqsh_layerdir=noble sqsh_layers=es-devel ro firstboot console=hvc0 loglevel=2"

disk=['/dev/scrap/boromir,,xvda,rw',
      '/dev/vg00/sqsh,,xvdb,ro',
      #'/dev/scrap/boromir-drbd1,,xvdc,rw',
      #'/dev/scrap/boromir-drbd2,,xvdd,rw',
      #'/dev/scrap/boromir-drbd3,,xvde,rw',
      '/dev/scrap/boromir-data,,xvdf,rw',
      '/dev/scrap/boromir-old,,xvdg,ro',
      ]

# 4G wasn't enough for git gc --aggressive, let's try 16G
memory="4096"
#memory="16384"

# pv|pvh|hvm
type="pvh"

vcpus=4

# list of network devices
vif = ['mac=00:16:3e:6a:ee:f6,bridge=xenbr0']
#vif = ['bridge=xenbr0'] # boot this way once to get random mac, then record it

# - based on noble es.sqsh (5/7/2025)
#
# zfs create -b64K -V32G scrap/boromir
#
# boot w/ initramsys_installer, select es.sqsh
#
# boot regular, go through firstboot dialogs
#
# postfix and telegraf failed
#
# apt update
# apt install zfs zfs-auto-snapshot
# apt upgrade
# apt autoremove
#
# cd /scrap/awesome-powers/
# git remote update
# git pull
#
# cd config/cah
# ../plant-symlinks common boromir
# ../plant-symlinks common-jammy boromir
# ../plant-symlinks common-noble boromir
# [audit files, removed usr]
# [symlink files into /]
#
# cd /root
# ln -s /etc/skel/.zshrc
# ln -s /etc/skel/.emacsrc
# chsh -s /bin/zsh
# mkdir -m 700 .ssh
# cd .ssh
# [copy my ssh keys into id_rsa{,pub}
# chmod 600 id_rsa
# cat id_rsa.pub > authorized_keys
#
# su - localadmin
# ln -s /etc/skel/.zshrc
# ln -s /etc/skel/.emacsrc
# ln -sf /etc/skel/.bashrc
# exit
#
# pam-auth-update [make sure "Kerberos authentication", and "Create home directory on login" are selected]
# visudo [%domain\ admins ALL=(ALL:ALL) ALL]
# 
# net ads join -U mike
# systemctl restart smbd nmbd winbind
# id mike [yup, worked!]
# 
# reboot
#
#
# mkdir /tmp/old
# mount -o noload,ro /dev/xvdg /tmp/old
#
# cd /etc/wireguard
# cp -va /tmp/old/upper/upper/etc/wireguard/wg-cah* .
# systemctl enable wg-quick@wg-cah1.service
#
# [create /etc/postfix/sasl_passwd]
# postmap sasl_passwd
#
# apt install drbd-utils
# /etc/drbd.d
# cp -va /tmp/old/upper/upper/etc/drbd.d/foo.res .
# cp -va /tmp/old/upper/upper/etc/drbd.d/old .
# zpool import zdata
# [change disk in foo.res, now at /dev/zvol/zdata]
# drbdadm up foo
#
# shoot... i should have used es-devel for this, not plain old es.  whatever.
# installed PKGS_COMPILATION, then installed ruckusrd
#

# - i really should either redo this using es-devel or just install the bare
#   minimun needed for kernel development.  i've laready used a ton of space in
#   my small root device.
# - also, now that we're using ZFS for root, and we installed using the
#   ruckusrd installer, we're not sharing sqsh images with the dom0.
#
# - manually cleaned out all the extra stuff in our upper layer via initramsys,
#   changed boot args to use es-devel and shared read-only sqsh_layerdev,
#   booted back up...
#
# winbind failed
#
# fixed dhcp lease so our IP gets set right, rebooted
#
# winbind failed
#
# pam-auth-update [make sure "Kerberos authentication", and "Create home directory on login" are selected]
# 
# net ads join -U mike
# systemctl restart smbd nmbd winbind
# id mike [yup, worked!]
#
# verified wireguard interface works
# systemctl enable wg-quick@wg-cah1.service
#
# verified mail works
#
# moved drbd resources into awesome-powers
#
# rsync apt sources and keyrings from nobledev
# apt udpate && apt install drbd-utils zfs ruckusrd
#
# double-check drbd works
#
# nuked all old zfs snapshots
# nuked zroot/sqsh
#
# apt upgrade
#
# systemctl enable --now zfs-import-cache.service zfs-import.target zfs-mount.service \
#    zfs-share.service zfs-volume-wait.service zfs-volumes.target zfs-zed.service \
#    zfs.target
#
# zfs set com.sun:auto-snapshot=false zdata
# zfs set com.sun:auto-snapshot=false zdata/foodev
#
# apt install zfs-auto-snapshot
#
# turned off snapshots on dom0... oh way, i actually don't even have
# zfs-auto-snapshot on aragorn.  never mind.
#
# cp /usr/share/systemd/tmp.mount /lib/systemd/system
# systemctl enable tmp.mount
#
# TODO:
# - zed fails at bootup... might be kernel/userspace version mismatch bug? yes it was
# - had to systemctl enable drbd@foo.target instead of just using the drbd service?
# - compilation is slow?  maybe use systemd tmp.mount target from /usr/share/systemd?
# - ???




# - based on gimli (7/11/2020)
#
# t/upper/upper/etc/hostname
# t/upper/upper/etc/mailname
# dbus-uuidgen > t/upper/upper/etc/machine-id
#
# [boot into maint]
#
# rm /sysroot/var/log/journal/*
# rm /etc/NetworkManager/system-connections/*
# /etc/postfix/main.cf
#
# nmcli, get the mac address into vif[]
# nmcli, configure xenbr0.id vlan interfaces as needed
#
# add "boromir.infrastructure.cah backup amdump" to /var/backups/.amandahosts
#
