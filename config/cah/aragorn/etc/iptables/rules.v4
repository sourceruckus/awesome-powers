# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*security
:INPUT ACCEPT [1464:177319]
:FORWARD ACCEPT [19:1220]
:OUTPUT ACCEPT [934:103859]
COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*raw
:PREROUTING ACCEPT [2049:213977]
:OUTPUT ACCEPT [934:103859]
COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# NAT rules for port-forwarding to different hosts

# send port 2723 to 22 locally
-A PREROUTING -i xenbr0.2 -p tcp --dport 2723 -j DNAT --to-destination 10.37.20.42:22

COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*mangle
:PREROUTING ACCEPT [2049:213977]
:INPUT ACCEPT [1464:177319]
:FORWARD ACCEPT [19:1220]
:OUTPUT ACCEPT [934:103859]
:POSTROUTING ACCEPT [1113:123380]

# mark traffic that comes directly to port 22 so we can drop it later on w/out
# also dropping the traffic we've forwarded there from 2723
-A PREROUTING -i xenbr0.2 -p tcp --dport 22 -j MARK --set-mark 1

COMMIT
# Completed on Fri Jan 24 23:18:05 2020
# Generated by iptables-save v1.6.1 on Fri Jan 24 23:18:05 2020
*filter
# Allow all outgoing, but drop incoming and forwarding packets by default
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Boilerplate acceptance policy
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A INPUT -i lo -j ACCEPT


# Accept all trusted internal network traffic (i.e., not internet and not
# public.cah)
-A INPUT -i xenbr0.20 -j ACCEPT
-A INPUT -i xenbr0.40 -j ACCEPT
-A INPUT -i wg-ruckus -j ACCEPT


# drop anything we've marked for dropping
-A INPUT -p tcp -m mark --mark 1 -j REJECT --reject-with tcp-reset


# ICMP policy
#
# accept ping requests from each each WAN interface
-A INPUT -i xenbr0.2 -p icmp --icmp-type echo-request -j ACCEPT
-A INPUT -i xenbr0.3 -p icmp --icmp-type echo-request -j ACCEPT
-A INPUT -i xenbr0.4 -p icmp --icmp-type echo-request -j ACCEPT


# SSH policy
#
# let everybody in locally
#
# NOTE: There's no reason for this rule, because we already allow ALL local
#       traffic... but just in case we change that later, I've left this here
#       commented out.
#
#-A INPUT ! -i xenbr0.2 -p tcp --dport 22 -j ACCEPT
#
# open up our non-standard port, because we're going to forward traffic from
# there to port 22 and we can't if it's blocked (duh).
#
# NOTE: At least for now, we're only opening this up for the cable WAN
#       connection.  The two 4g modem interfaces result in constantly changing
#       IPs, so they're not very useful for direct SSH access.
#
-A INPUT -i xenbr0.2 -p tcp --dport 2723 -j ACCEPT

# Instead of blacklisting IPs that are spamming my box, let's try and deter
# brute force attacks by only allowing 3 connections per minute.  This way, the
# firewall is dynamically helping reduce traffic, and IPs don't get permanently
# banned.
#
# NOTE: This is slightly annoying because it doesn't matter if the connection
#       is successful.  This means, if I open 5 terminals and try to start an
#       ssh session in each of them, the last 2 will fail to connect.
#
# NOTE: This only limits xenbr0.2, all other interfaces are explicitly allowed
#       elsewhere.
#
# record connections to ssh port
-A INPUT -i xenbr0.2 -p tcp --dport 22 -m state --state NEW -m recent --set --name ssh --rsource
# then rate limit connection attempts to 3 per minute
-A INPUT -i xenbr0.2 -p tcp --dport 22 -m state --state NEW -m recent ! --rcheck --seconds 60 --hitcount 4 --name ssh --rsource -j ACCEPT 


# Mosh policy
#
# Mosh connections are initiated via SSH, so the rate limiting and non-standard
# port policy there help with Mosh, too.  Once initially connected, mosh-server
# is started listening on a port in the range 60000-61000.  So, we have to
# allow that.
#
# FIXME: why doesn't this work...?  the firewal rules look right, but mosh
#        never manages to connect... odd...
#
-A INPUT -i xenbr0.2 -p udp --dport 60000:61000 -j ACCEPT


# WiFi APs
#
# We let these in from public wifi, by mac address, so they can talk to the Unifi management
# software
#
# wifi-ap2 (CAH Public)
-A INPUT -i xenbr0.10 -m mac --mac-source 74:83:c2:b9:f0:ea -j ACCEPT


# Drop invalid packets
-A INPUT -m conntrack --ctstate INVALID -j DROP


# Reject anything that's fallen through to this point
## Try to be protocol-specific w/ rejection message
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-proto-unreachable


# Internet reply forwarding policies
#
# Allow all replies to forward back to the appropriate interface.  No point in
# dropping any of this, really.
#
-A FORWARD -i xenbr0.2 -o xenbr0.20 -m state --state RELATED,ESTABLISHED -j ACCEPT


# Internal network forwarding policies
#
# infrastructure.cah can go everywhere (CONFIRMED)
-A FORWARD -i xenbr0.20 -j ACCEPT

COMMIT
# Completed on Fri Jan 24 23:18:05 2020
